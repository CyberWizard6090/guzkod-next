'use client';

import { useRouter } from 'next/navigation';
import { useEffect } from 'react';
import { Block } from 'shared/ui/block';
import { Button } from 'shared/ui/button';

const ERROR_MESSAGES: Record<number, string> = {
  400: '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å',
  401: '–ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω',
  403: '–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω',
  404: '–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –±—ã–ª–∞ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∞',
  408: '–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ',
  429: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤',
  500: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞',
  502: '–ü–ª–æ—Ö–æ–π —à–ª—é–∑',
  503: '–°–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω',
  504: '–®–ª—é–∑ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç',
};

const extractStatusCode = (message: string | undefined): number | null => {
  const match = message?.match(/\b\d{3}\b/);
  return match ? parseInt(match[0], 10) : null;
};

type Props = {
  error: Error;
  reset: () => void;
};

export default function GlobalError({ error, reset }: Readonly<Props>) {
  useEffect(() => {
    console.error('üî• Global error caught:', error);
  }, [error]);

  const router = useRouter();

  const handleClick = () => {
    router.push('/');
  };

  const statusCode = extractStatusCode(error.message);
  const description = (statusCode && ERROR_MESSAGES[statusCode]) || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞';

  return (
    <Block>
      <div className="error-page">
        <h1 className="error-page__title">–û—à–∏–±–∫–∞</h1>
        {statusCode && <div className="error-page__code">{statusCode}</div>}
        <p className="error-page__description">{description}</p>
        <div className="error-page__button-group">
          <Button className="error-page__button" onClick={handleClick}>
            –ù–∞ –≥–ª–∞–≤–Ω—É—é
          </Button>
          <Button variant={'secondary'} className="error-page__button" onClick={() => reset()}>
            –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
          </Button>
        </div>
      </div>
    </Block>
  );
}
